syntax = "proto3";
package olimdzhon.checkers.v1;

option go_package = "github.com/olimdzhon/checkers";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "olimdzhon/checkers/v1/types.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // IncrementCounter increments the counter.
  rpc IncrementCounter(MsgIncrementCounter)
      returns (MsgIncrementCounterResponse);

  // UpdateParams updates the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgIncrementCounter defines the Msg/IncrementCounter request type.
message MsgIncrementCounter {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "olimdzhon/checkers/MsgIncrementCounter";

  // sender is the message sender.
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgIncrementCounterResponse defines the Msg/IncrementCounter response type.
message MsgIncrementCounterResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "olimdzhon/checkers/MsgUpdateParams";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
